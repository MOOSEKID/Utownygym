import{bt as r,c as i,A as l}from"./index.ec7eb99e.js";const o=e=>new Promise((a,s)=>{l.post("admins/import",e).then(t=>{a(t)}).catch(t=>{s(t)})}),c=()=>i.csvImportDialog({title:"Import staff by CSV",sampleFile:"/csv/staff.csv",importMethod:o,options:[{label:"Overwrite existing staff that have the same email",type:"checkbox",key:"email_overwrite",value:!1}]}),d=e=>[{label:e.$t("label.all"),value:null},{label:e.$t("label.active"),value:!0}],f=r("staff",{state:()=>({rows:[],permissions:{new:"staff:new",edit:"staff:edit",delete:"staff:delete"}}),getters:{module:e=>({name:"Staff",label:e.$t("label.staff"),singular:e.$t("singular.staff"),plural:e.$t("plural.staff")}),columns:e=>[{name:"avatar",align:"left",field:"avatar",style:"width: 40px"},{name:"name",align:"left",label:e.$t("label.name"),field:"name",style:"width: 40px",sortable:!0},{name:"email",align:"left",label:e.$t("label.email"),field:"email",style:"width: 40px",sortable:!0},{name:"last_login",align:"left",label:e.$t("label.lastLogin"),field:a=>{var s;return(s=a.last_login)==null?void 0:s.created_at},format:i.formatDateAsHuman,style:"width: 40px",sortable:!0},{name:"groups",align:"left",label:e.$t("label.groups"),field:"groups",format:a=>a?a.map(s=>s.name).toString():null,style:"width: 40px",sortable:!1},{name:"is_active",align:"left",label:e.$t("label.active"),field:"is_active",format:a=>a?"Yes":"No",style:"width: 40px",sortable:!0},{name:"is_supper_admin",align:"left",label:e.$t("label.admin"),field:"is_supper_admin",format:a=>a?"Yes":"No",style:"width: 40px",sortable:!0},{name:"actions",align:"right",sortable:!1}],actions:e=>[{label:e.$t("label.edit"),permission:"staff:edit",action:"route",route:"Staff",params:a=>({id:a.id}),query:a=>({action:"edit"}),icon:"fas fa-edit",deleted:!1},{label:({is_instructor:a})=>e.$t(a?"removeFromInstructor":"markAsInstructor"),permission:"staff:edit",action:e.changeInstructor,icon:"fas fa-user",deleted:!1},{label:e.$t("label.delete"),permission:"staff:delete",action:"delete",icon:"fas fa-trash-alt",deleted:!1},{label:e.$t("label.restore"),permission:"staff:delete",action:"restore",icon:"fas fa-trash-undo",deleted:!0}],toolbar:e=>[{label:e.$t("label.trashed"),action:"request",component:"base-toggle",dense:!0,key:"deleted",checkedIcon:"delete",permission:"staff:delete",guard:["admins"],deleted:"all"},{title:e.$t("label.status"),action:"request",component:"base-select",dense:!0,outlined:!0,key:"active",placeholder:e.$t("placeholder.select"),optionsDense:!0,style:"width: 150px",mapOptions:!0,emitValue:!0,options:d(e),prefix:e.$t("prefix.status"),deleted:"all"},{icon:"fad fa-file-import",tooltip:e.$t("importByCsv"),permission:"staff:new",action:c,color:"grey",deleted:"all"},{icon:"fad fa-plus-circle",label:e.$t("label.addStaff"),permission:"staff:new",action:"route",params:{id:"add"},route:"Staff",color:"primary",deleted:"all"}],filters:e=>[]},actions:{get(e){return new Promise((a,s)=>{l.get("admins",e).then(t=>{this.setRows(t.data),a(t)}).catch(t=>{s(t)})})},options(e){return new Promise((a,s)=>{l.get("admins/options",e).then(t=>{this.setRows(t.data),a(t)}).catch(t=>{s(t)})})},store(e){return new Promise((a,s)=>{l.post("admins/store",e).then(t=>{a(t)}).catch(t=>{s(t)})})},show(e){return new Promise((a,s)=>{l.get(`admins/${e}`).then(t=>{t.address||Object.assign(t,{address:{}}),a(t)}).catch(t=>{s(t)})})},update(e){return new Promise((a,s)=>{l.put(`admins/${e.id}`,e).then(t=>{a(t)}).catch(t=>{s(t)})})},delete(e){return new Promise((a,s)=>{l.delete(`admins/${e}/destroy`).then(t=>{a(t)}).catch(t=>{s(t)})})},deleteSelected(e){return new Promise((a,s)=>{l.delete("admins/destroy",{items:e}).then(t=>{a(t)}).catch(t=>{s(t)})})},restore(e){return new Promise((a,s)=>{l.post(`admins/${e}/restore`).then(t=>{a(t)}).catch(t=>{s(t)})})},restoreSelected(e){return new Promise((a,s)=>{l.post("admins/restore",{items:e}).then(t=>{a(t)}).catch(t=>{s(t)})})},changeActive(e){return new Promise((a,s)=>{l.post(`admins/${e.id}/change-active`).then(t=>{e.is_active=!e.is_active;const{message:n}=t;i.success(n),a(t)}).catch(t=>{i.error(t),s(t)})})},changeAdmin(e){return new Promise((a,s)=>{l.post(`admins/${e.id}/change-admin`).then(t=>{e.is_supper_admin=!e.is_supper_admin;const{message:n}=t;i.success(n),a(t)}).catch(t=>{i.error(t),s(t)})})},changeInstructor(e){return new Promise((a,s)=>{l.post(`admins/${e.id}/change-instructor`).then(t=>{e.is_instructor=!e.is_instructor;const{message:n}=t;i.success(n),a(t)}).catch(t=>{i.error(t),s(t)})})}}});export{f as u};
